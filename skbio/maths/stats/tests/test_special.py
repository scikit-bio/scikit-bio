#!/usr/bin/env python

#-----------------------------------------------------------------------------
# Copyright (c) 2013--, scikit-bio development team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file COPYING.txt, distributed with this software.
#-----------------------------------------------------------------------------
"""Unit tests for special functions used in statistics.
"""
from __future__ import division

import math
from unittest import TestCase, main

import numpy as np

from skbio.maths.stats.special import ndtri, log1p


class SpecialTests(TestCase):

    """Tests miscellaneous functions."""

    def test_log1p(self):
        """log1p should give same results as cephes"""
        p_s = [1e-10, 1e-5, 0.1, 0.8, 0.9, 0.95, 0.999, 0.9999999, 1,
               1.000000001, 1.01, 2]
        exp = [9.9999999995e-11, 9.99995000033e-06, 0.0953101798043,
               0.587786664902, 0.641853886172, 0.667829372576, 0.692647055518,
               0.69314713056, 0.69314718056, 0.69314718106, 0.698134722071,
               1.09861228867, ]
        for p, e in zip(p_s, exp):
            np.testing.assert_allclose(log1p(p), e)

    def test_ndtri(self):
        """ndtri should give same result as implementation in cephes"""
        exp = [-1.79769313486e+308, -2.32634787404, -2.05374891063,
               -1.88079360815, -1.75068607125, -1.64485362695, -1.5547735946,
               -1.47579102818, -1.40507156031, -1.34075503369, -1.28155156554,
               -1.22652812004, -1.17498679207, -1.12639112904, -1.08031934081,
               -1.03643338949, -0.99445788321, -
               0.954165253146, -0.915365087843,
               -0.877896295051, -0.841621233573, -
               0.806421247018, -0.772193214189,
               -0.738846849185, -0.70630256284, -
               0.674489750196, -0.643345405393,
               -0.612812991017, -0.582841507271, -
               0.553384719556, -0.524400512708,
               -0.495850347347, -0.467698799115, -
               0.439913165673, -0.412463129441,
               -0.385320466408, -0.358458793251, -
               0.331853346437, -0.305480788099,
               -0.279319034447, -0.253347103136, -
               0.227544976641, -0.201893479142,
               -0.176374164781, -0.150969215497, -
               0.125661346855, -0.100433720511,
               -0.0752698620998, -0.0501535834647, -0.0250689082587,
               0.0, 0.0250689082587, 0.0501535834647, 0.0752698620998,
               0.100433720511, 0.125661346855, 0.150969215497, 0.176374164781,
               0.201893479142, 0.227544976641, 0.253347103136, 0.279319034447,
               0.305480788099, 0.331853346437, 0.358458793251, 0.385320466408,
               0.412463129441, 0.439913165673, 0.467698799115, 0.495850347347,
               0.524400512708, 0.553384719556, 0.582841507271, 0.612812991017,
               0.643345405393, 0.674489750196, 0.70630256284, 0.738846849185,
               0.772193214189, 0.806421247018, 0.841621233573, 0.877896295051,
               0.915365087843, 0.954165253146, 0.99445788321, 1.03643338949,
               1.08031934081, 1.12639112904, 1.17498679207, 1.22652812004,
               1.28155156554, 1.34075503369, 1.40507156031, 1.47579102818,
               1.5547735946, 1.64485362695, 1.75068607125, 1.88079360815,
               2.05374891063, 2.32634787404, ]
        obs = [ndtri(i / 100.0) for i in range(100)]
        np.testing.assert_allclose(obs, exp, 1e-6)

# execute tests if called from command line
if __name__ == '__main__':
    main()
