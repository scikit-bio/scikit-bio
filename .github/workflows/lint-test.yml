name: lint-test
# build on every PR and commit to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install-and-test:
    name: (${{ matrix.python-version }}, ${{ matrix.os }}, USE_CYTHON=${{matrix.use_cython}})
    runs-on: ${{ matrix.os }}
    env: 
      MPLBACKEND: Agg
      USE_CYTHON: ${{matrix.use_cython}}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        use_cython: ["TRUE", "FALSE"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          if [[ "$(uname -s)" == "Linux" ]];
          then
            conda install --yes -c conda-forge gxx_linux-64
          else
            ls -l /Applications/
            # conda clang does not like xcode 12
            sudo xcode-select --switch /Applications/Xcode_11.7.app
            # the system tools are unusable, hide them
            sudo mv -f /Library/Developer/CommandLineTools /Library/Developer/CommandLineTools.org
            # now we are ready to install clang
            conda install --yes -c conda-forge clangxx_osx-64
          fi
          conda install -q --yes -c conda-forge --file ci/conda_requirements.txt
          pip install -r ci/pip_requirements.txt --ignore-installed
          pip install . --no-deps
          conda list
      - name: Run unit tests
        shell: bash -l {0}
        env:
          WITH_COVERAGE: "TRUE"
        run: make test
      - name: Build docs
        shell: bash -l {0}
        run: make -C doc clean html

  aarch64_install_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # setup-buildx-action uses the git context directly
        # but checklist wants the .git directory
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and test for linux-aarch64
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          # ^ to use the local checkout, not the git context
          file: aarch64_py38.Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
