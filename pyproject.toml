[build-system]
requires = ["setuptools", "wheel", "numpy", "cython"]
build-backend = "setuptools.build_meta"

[project]
name = "scikit-bio"
dynamic = ["version"]
description = "Data structures, algorithms and educational resources for bioinformatics."
readme = "README.rst"
requires-python = ">=3.9"
license = "BSD-3-Clause"
license-files = ["LICENSE.txt"]
authors = [
    {name = "scikit-bio development team", email = "qiyunzhu@gmail.com"}
]
maintainers = [
    {name = "scikit-bio development team", email = "qiyunzhu@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows"
]
dependencies = [
    "requests >= 2.20.0",
    "decorator >= 3.4.2",
    "natsort >= 4.0.3",
    "numpy >= 1.17.0",
    "pandas >= 1.5.0",
    "scipy >= 1.9.0",
    "h5py >= 3.6.0",
    "biom-format >= 2.1.16",
    "statsmodels >= 0.14.0",
    "patsy >= 0.5.0",
    "array-api-compat >= 1.3"
]

[project.urls]
Homepage = "https://scikit.bio"
Documentation = "https://scikit.bio/docs/latest/"
Repository = "https://github.com/scikit-bio/scikit-bio"
Issues = "https://github.com/scikit-bio/scikit-bio/issues"

[project.optional-dependencies]
test = [
    "pytest",
    "coverage",
    "responses",
    "matplotlib"
]
docs = [
    "sphinx",
    "sphinx-design",
    "sphinx-copybutton",
    "pydata-sphinx-theme",
    "sphinxcontrib-youtube",
    "sphinx-sitemap",
    "numpydoc",
    "matplotlib",
    "statsmodels",
    "patsy"
]
lint = [
    "check-manifest",
    "python-dateutil",
    "numpy",
    "ruff",
    "pre-commit"
]
dev = [
    "pytest",
    "coverage",
    "responses",
    "matplotlib",
    "sphinx",
    "sphinx-design",
    "sphinx-copybutton",
    "pydata-sphinx-theme",
    "sphinxcontrib-youtube",
    "sphinx-sitemap",
    "numpydoc",
    "statsmodels",
    "patsy",
    "check-manifest",
    "python-dateutil",
    "numpy",
    "ruff",
    "pre-commit"
]

[tool.setuptools.dynamic]
version = {attr = "skbio.__version__"}

[tool.setuptools]
packages = ["skbio"]

[tool.setuptools.package-data]
"skbio.alignment.tests" = ["data/*"]
"skbio.diversity.alpha.tests" = ["data/qiime-191-tt/*"]
"skbio.diversity.beta.tests" = ["data/qiime-191-tt/*"]
"skbio.io.tests" = ["data/*"]
"skbio.io.format.tests" = ["data/*"]
"skbio.stats.tests" = ["data/*"]
"skbio.stats.distance.tests" = ["data/*"]
"skbio.stats.ordination.tests" = ["data/*"]
"skbio.metadata.tests" = ["data/invalid/*", "data/valid/*"]
"skbio.embedding.tests" = ["data/*"]

[tool.cibuildwheel]
# Skip 32-bit builds, PyPy, and musllinux
skip = ["*-win32", "*-manylinux_i686", "pp*", "*-musllinux*"]

# Python versions to build
build = "cp39-* cp310-* cp311-* cp312-* cp313-*"

# Test dependencies
test-requires = ["pytest", "coverage", "responses"]

# Install dependencies before building
before-build = "pip install numpy cython"

[tool.cibuildwheel.linux]
# Use manylinux2014 for better compatibility
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob",
    "*.pyx",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]

[tool.check-manifest]
ignore = [
    ".coveragerc",
    ".dockerignore",
    ".editorconfig",
    "checklist.py",
    # created by conda-incubator/setup-miniconda@v3 action
    "ci/setup-miniconda-patched-conda_host_env.yml",
]

# Basic configurations for Ruff.
# See https://docs.astral.sh/ruff/configuration/
[tool.ruff]
target-version = "py38"
exclude = [
    "skbio/**/tests/*",  # ignoring to be able to implement pydocstyle
    "doc/**",  # documentation
    "web/**",  # website
]

[tool.ruff.lint]
select = ["E", "W"]  # pycodestyle (E, W)
ignore = [
    "D203",  # puts a space before class docstrings
    "D213",  # puts summary on second line
    "D400",  # redundant with D415 in place
    "D301",  # forces raw string literals
]
